<?php

/*
 | !!!! DO NOT EDIT THIS FILE !!!!
 |
 | You can change settings by setting them in the environment or .env
 | If there is something you need to change, but is not available as an environment setting,
 | request an environment variable to be created upstream or send a pull request.
 */

use Monolog\Handler\NullHandler;
use Monolog\Handler\StreamHandler;
use Monolog\Handler\SyslogUdpHandler;
use Monolog\Processor\PsrLogMessageProcessor;

return [

    'channels' => [
        'console' => [
            'driver' => 'stack',
            'channels' => ['single', 'stdout', 'flare'],
            'ignore_exceptions' => false,
        ],

        'console_debug' => [
            'driver' => 'stack',
            'channels' => ['single', 'stdout_debug'],
            'ignore_exceptions' => false,
        ],

        'single' => [
            'driver' => 'single',
            'path' => env('APP_LOG', base_path('logs/librenms.log')),
            'formatter' => App\Logging\LogFileFormatter::class,
            'level' => env('LOG_LEVEL', 'warning'),
            'replace_placeholders' => true,
        ],

        'daily' => [
            'driver' => 'daily',
            'path' => env('APP_LOG', base_path('logs/librenms.log')),
            'formatter' => App\Logging\NoColorFormatter::class,
            'level' => env('LOG_LEVEL', 'error'),
            'days' => 14,
            'replace_placeholders' => true,
        ],

        'stdout_debug' => [
            'driver' => 'monolog',
            'handler' => StreamHandler::class,
            'formatter' => App\Logging\CliColorFormatter::class,
            'with' => [
                'stream' => 'php://output',
            ],
            'level' => 'debug',
        ],

        'stdout' => [
            'driver' => 'monolog',
            'handler' => StreamHandler::class,
            'formatter' => App\Logging\CliColorFormatter::class,
            'with' => [
                'stream' => 'php://output',
            ],
            'level' => 'info',
        ],

        'flare' => [
            'driver' => 'flare',
        ],
    ],

];
