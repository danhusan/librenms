<?php

/*
 | !!!! DO NOT EDIT THIS FILE !!!!
 |
 | You can change settings by setting them in the environment or .env
 | If there is something you need to change, but is not available as an environment setting,
 | request an environment variable to be created upstream or send a pull request.
 */

use Illuminate\Support\Facades\Facade;
use Illuminate\Support\ServiceProvider;

return [

    'timezone' => ini_get('date.timezone') ?: 'UTC', // use existing timezone

    'default_locale' => env('APP_LOCALE', 'en'), // just a holder for the system set locale

    'providers' => ServiceProvider::defaultProviders()->merge([
        /*
          * Laravel Framework Service Providers...
          */

        /*
          * Package Service Providers...
          */

        /*
          * LibreNMS Service Providers...
          */
        App\Providers\ConfigServiceProvider::class,
        App\Providers\ErrorReportingProvider::class, // This should always be after the config is loaded
        App\Providers\AppServiceProvider::class,
        App\Providers\CliServiceProvider::class,
        App\Providers\AuthServiceProvider::class,
        // App\Providers\BroadcastServiceProvider::class,
        App\Providers\EventServiceProvider::class,
        App\Providers\RouteServiceProvider::class,
        App\Providers\ComposerServiceProvider::class,
        App\Providers\DatastoreServiceProvider::class,
        App\Providers\SnmptrapProvider::class,
        App\Providers\PluginProvider::class,
    ])->toArray(),

    'aliases' => Facade::defaultAliases()->merge([
        'Debugbar' => Barryvdh\Debugbar\Facades\Debugbar::class,
        'Flare' => Spatie\LaravelIgnition\Facades\Flare::class,
        'Redis' => Illuminate\Support\Facades\Redis::class,

        // LibreNMS
        'DeviceCache' => App\Facades\DeviceCache::class,
        'Permissions' => App\Facades\Permissions::class,
        'PortCache' => App\Facades\PortCache::class,
        'PluginManager' => App\Facades\PluginManager::class,
        'Rrd' => App\Facades\Rrd::class,
        'SnmpQuery' => App\Facades\FacadeAccessorSnmp::class,
        'LibrenmsConfig' => App\Facades\LibrenmsConfig::class,
    ])->forget([
        'Http', // don't use Laravel Http facade, LibreNMS has its own wrapper
    ])->toArray(),

    'charset' => env('CHARSET', ini_get('php.output_encoding') ?: ini_get('default_charset') ?: 'UTF-8'),

];
